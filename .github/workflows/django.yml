name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry==1.5.0
        python -m pip install tox-gh-actions

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        python -m poetry install --with testing

    - name: Run tests
      run: |
        ls -la
        chmod +x runtests.sh
        ./runtests.sh
